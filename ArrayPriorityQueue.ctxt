#BlueJ class context
comment0.target=ArrayPriorityQueue
comment0.text=\n\ ArrayPriorityQueue\n\ \n\ PriorityQueue\ Methods\ \:\ add,\ poll,\ peek\n\ \n\ utilizes\ ArrayList\n\ \n\ Christian\ Hollar\n\ 10/16/2020\n\ \n
comment1.params=
comment1.target=ArrayPriorityQueue()
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ ArrayPriorityQueue\n
comment2.params=t
comment2.target=boolean\ add(java.lang.Comparable)
comment2.text=\n\ adds\ input\ element\ to\ ArrayList\ utlizing\ add()\n\ returns\ boolean\ of\ whether\ this\ is\ successful\n\ \n\ Integer\ 10\n\ String\ "Ten"\n
comment3.params=
comment3.target=java.lang.Comparable\ poll()
comment3.text=\n\ first\ checks\ if\ arrayList\ is\ empty\n\ \n\ sets\ value\ to\ first\ element\ of\ aList\n\ compares\ each\ element\ within\ aList\ to\ find\ the\ minimum\ using\ compareTo(by\ weights)\n\ if\ element\ smaller\ is\ found\ it\ is\ set\ to\ value\n\ index\ is\ recorded\ for\ removal\ \n\ \n\ value\ (min\ element)\ returned\ \n\ \n\ no\ input\n
comment4.params=
comment4.target=java.lang.Comparable\ peek()
comment4.text=\n\ first\ checks\ if\ arrayList\ is\ empty\n\ \n\ sets\ value\ to\ first\ element\ of\ aList\n\ compares\ each\ element\ within\ aList\ to\ find\ the\ minimum\ using\ compareTo(by\ weights)\n\ if\ element\ smaller\ is\ found\ it\ is\ set\ to\ value\n\ \n\ value\ (min\ element)\ returned\n\ no\ input\n
numComments=5
